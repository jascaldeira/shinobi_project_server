// --/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/ //
//              ______       _   _   ___ _ _              ____                 //
//              | ___ \     | | | | / (_) | |            / ___|                //
//              | |_/ / ___ | |_| |/ / _| | | ___ _ __  / /___                 //
//              | ___ \/ _ \| __|    \| | | |/ _ \ '__| | ___ \                //
//              | |_/ / (_) | |_| |\  \ | | |  __/ |    | \_/ |                //
//              \____/ \___/ \__\_| \_/_|_|_|\___|_|    \_____/                //
//                                      _       _                              //
//                      /\/\   ___   __| |_   _| | ___                         //
//                     /    \ / _ \ / _` | | | | |/ _ \                        //
//                    / /\/\ \ (_) | (_| | |_| | |  __/                        //
//                    \/    \/\___/ \__,_|\__,_|_|\___|                        //
//                                                                             //
// --/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/ //
//                                                                             //
//  Release Date: 03-09-2010      Version: 1.00      Author: Myzter            //
//                                                                             //
// --/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/ //
//                                                                             //
//  Module Name: AscII to Word //

-	script	asc2word_init	-1,{
OnInit:
	while (!$@BotKillerEnabled) sleep 100;
	callfunc "addModule","asc2word","ASCII Word","1.00",100;
	set .@NPCID, callfunc("getNPCID","BKasc2word");
	
	// Checking bk6_ascii
	query_sql "show tables like 'bk6_ascii'",.@BKTable$;
	if (.@BKTable$ == "") {
		debugmes "BotKiller 6 - AscII to Word: Creating table `bk6_ascii`";
		query_sql "CREATE TABLE `bk6_ascii` (`ascii` int(11) unsigned NOT NULL DEFAULT '0',`pattern` varchar(340) NOT NULL,KEY `idx` (`ascii`)) ENGINE=MyISAM;";

		debugmes "BotKiller 6 - AscII to Word: Creating patterns A-Z";
		query_sql "INSERT INTO `bk6_ascii` VALUES (65,'4,10,17,31,17'),(66,'31,17,15,17,31'),(67,'31,1,1,1,31'),(68,'7,9,17,17,15'),(69,'31,1,15,1,31'),(70,'31,1,15,1,1'),(71,'31,1,25,17,31'),(72,'17,17,31,17,17'),(73,'14,4,4,4,14'),(74,'28,8,8,9,15'),(75,'17,9,7,9,17'),(76,'1,1,1,1,31'),(77,'17,27,21,17,17'),(78,'17,19,21,25,17'),(79,'31,17,17,17,31'),(80,'31,17,31,1,1'),(81,'15,9,13,9,31'),(82,'15,9,7,9,17'),(83,'31,1,31,16,31'),(84,'31,4,4,4,4'),(85,'17,17,17,17,31'),(86,'17,17,10,10,4'),(87,'17,17,21,21,10'),(88,'17,10,4,10,17'),(89,'18,18,12,4,2'),(90,'31,24,12,6,31');";
	}

	// English Messages
	set .@lc$,"en";
	callfunc "newMes", .@NPCID, 0, "Input the following code:",.@lc$;

	// Spanish Messages
	set .@lc$,"es";
	callfunc "newMes", .@NPCID, 0, "Ingresa el siguiente código:",.@lc$;
}

function	script	BK_asc2word	{
	set .@NPCID, callfunc("getNPCID","BKasc2word","BKasc2word");
	
	set .@code$, callfunc("GenString",4,0);
	
	mes "[^ff0000" + @BKPoliceName$ + "^000000]";
	mes callfunc("getMes",.@NPCID,0);
	callfunc "Char2AscII", .@code$;
	mes " ";
	mes callfunc("getMes",$@BKNPCID,67) + (atoi(callfunc("ReadC","BKTry")) + 1) + callfunc("getMes",$@BKNPCID,68) + $@BKMaxTry + " *";
	next;
	input .@bkword$;
	
	query_sql "select if(ucase('" + .@bkword$ + "') = ucase('" + .@code$ + "'),1,0)",.@result;
	return .@result[0];
}

function	script	GenString	{
	// Create a random string
	setarray .@AutoCharVoc$[0],"a","e","i","o","u";
	setarray .@AutoCharCons$[0],"b","c","d","f","g","h","j","k","l","m","n","p","r","s","t","v","w","x","y";
	set .@tot, getarg(0);
	set .@init, rand(1,2);
	set .@gstring$,"";
	for (set .@xd,0; .@xd < .@tot; set .@xd, .@xd + 1) {
		set .@init, .@init + 1;
		if (.@init > 2) set .@init, 1;
		if (getarg(1) && getstrlen(.@gstring$) > 1 && .@xd < .@tot -1 && !rand(15)) set .@gstring$, .@gstring$ + " ";
		if (.@init == 1) {
			set .@gstring$, .@gstring$ + .@AutoCharVoc$[rand(getarraysize(.@AutoCharVoc$))];
		} else {
			set .@gstring$, .@gstring$ + .@AutoCharCons$[rand(getarraysize(.@AutoCharCons$))];
		}
	}
	return .@gstring$;
}

// ************************************************************************
// ***                    ASCII NUMBER GENERATOR II                     ***
// ************************************************************************
function	script	Char2AscII	{
	set .@code$, getarg(0);
	setarray .@BK_ASCIILetters$[0],"H","S","O"; // Characters to draw ASCII Letters
	set @L00$, "";
	set @L01$, "";
	set @L02$, "";
	set @L03$, "";
	set @L04$, "";
	set @L05$, "";
	set @L06$, "";
	set .@curstr$,.@BK_ASCIILetters$[rand(getarraysize(.@BK_ASCIILetters$))];
	mes .@BKTitle$;
	for (set .@ac,0; .@ac < 4; set .@ac, .@ac + 1) {
		if (!query_sql("select `pattern` from `bk6_ascii` where ascii=(select ascii(ucase(mid('" + .@code$ + "'," + (.@ac + 1) + ",1)))) order by rand() limit 1",.@BKPattern$)) {
			atcommand "@request " + strcharinfo(0) + ": ASCII Pattern not found [" + .@code$ + "(" + (.@ac + 1) + ")], please FIX IT!";
			return;
		}
		cleararray .@BKPat[0],0,5;
		set .@bkidx,1;
		for (set .@bkpt,0; .@bkpt < 5; set .@bkpt, .@bkpt + 1) {
			query_sql "select if(locate(',','" + .@BKPattern$[0] + "'," + .@bkidx + ")>0, mid('" + .@BKPattern$[0] + "'," + .@bkidx + ",locate(',','" + .@BKPattern$[0] + "'," + .@bkidx + ")-" + .@bkidx + "), mid('" + .@BKPattern$[0] + "'," + .@bkidx + ")) A, locate(',','" + .@BKPattern$[0] + "'," + .@bkidx + ") B",.@BKPTN,.@BKPTL;
			set .@bkidx,.@BKPTL[0] + 1;
			set .@BKPat[.@bkpt],.@BKPTN[0];
		}
		set .@vertnum, rand(3);
		for (set .@ac2,0; .@ac2 < 5; set .@ac2, .@ac2 + 1) {
			set .@msgline$, "";
			if (.@BKPat[.@ac2] & 1 ) set .@msgline$,.@msgline$ + callfunc("RndColor") + callfunc("RepeatString",.@curstr$,1); else set .@msgline$,.@msgline$ + callfunc("RndColor2") + callfunc("RepeatString",.@curstr$,1);
			if (.@BKPat[.@ac2] & 2 ) set .@msgline$,.@msgline$ + callfunc("RndColor") + callfunc("RepeatString",.@curstr$,1); else set .@msgline$,.@msgline$ + callfunc("RndColor2") + callfunc("RepeatString",.@curstr$,1);
			if (.@BKPat[.@ac2] & 4 ) set .@msgline$,.@msgline$ + callfunc("RndColor") + callfunc("RepeatString",.@curstr$,1); else set .@msgline$,.@msgline$ + callfunc("RndColor2") + callfunc("RepeatString",.@curstr$,1);
			if (.@BKPat[.@ac2] & 8 ) set .@msgline$,.@msgline$ + callfunc("RndColor") + callfunc("RepeatString",.@curstr$,1); else set .@msgline$,.@msgline$ + callfunc("RndColor2") + callfunc("RepeatString",.@curstr$,1);
			if (.@BKPat[.@ac2] & 16) set .@msgline$,.@msgline$ + callfunc("RndColor") + callfunc("RepeatString",.@curstr$,1); else set .@msgline$,.@msgline$ + callfunc("RndColor2") + callfunc("RepeatString",.@curstr$,1);
			setd "@L0" + .@ac2 + "$",getd("@L0" + .@ac2 + "$") + .@msgline$ + callfunc("RndColor2") + callfunc("RepeatString",.@curstr$,2) + "^000000";
		}
	}
	mes @L00$;
	mes @L01$;
	mes @L02$;
	mes @L03$;
	mes @L04$;
	mes @L05$;
	mes @L06$;
	return;
}
