// --/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/ //
//              ______       _   _   ___ _ _              ____                 //
//              | ___ \     | | | | / (_) | |            / ___|                //
//              | |_/ / ___ | |_| |/ / _| | | ___ _ __  / /___                 //
//              | ___ \/ _ \| __|    \| | | |/ _ \ '__| | ___ \                //
//              | |_/ / (_) | |_| |\  \ | | |  __/ |    | \_/ |                //
//              \____/ \___/ \__\_| \_/_|_|_|\___|_|    \_____/                //
//                                      _       _                              //
//                      /\/\   ___   __| |_   _| | ___                         //
//                     /    \ / _ \ / _` | | | | |/ _ \                        //
//                    / /\/\ \ (_) | (_| | |_| | |  __/                        //
//                    \/    \/\___/ \__,_|\__,_|_|\___|                        //
//                                                                             //
// --/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/ //
//                                                                             //
//  Release Date: 25-01-2012      Version: 1.00      Author: Myzter            //
//                                                                             //
// --/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/ //
//                                                                             //
//  Module Name: Lie2Me //

-	script	lie2me_init	-1,{
OnInit:
	while (!$@BotKillerEnabled) sleep 100;
	callfunc "addModule","lie2me","Lie To Me","1.00",100;
	set .@NPCID, callfunc("getNPCID","BKlie2me");
	
	// English Messages
	set .@lc$,"en";
	callfunc "newMes", .@NPCID, 0, "Who lies?",.@lc$;
	callfunc "newMes", .@NPCID, 1, "Your",.@lc$;
	callfunc "newMes", .@NPCID, 2, "Who doesn't lie?",.@lc$;
	callfunc "newMes", .@NPCID, 3, "is",.@lc$;
	callfunc "newMes", .@NPCID, 4, "Max HP",.@lc$;
	callfunc "newMes", .@NPCID, 5, "Max SP",.@lc$;
	callfunc "newMes", .@NPCID, 6, "Level",.@lc$;
	callfunc "newMes", .@NPCID, 7, "Job Level",.@lc$;
	

	// Spanish Messages
	set .@lc$,"es";
	callfunc "newMes", .@NPCID, 0, "¿Quién miente?",.@lc$;
	callfunc "newMes", .@NPCID, 1, "Tu",.@lc$;
	callfunc "newMes", .@NPCID, 2, "¿Quién no miente?",.@lc$;
	callfunc "newMes", .@NPCID, 3, "es",.@lc$;
	callfunc "newMes", .@NPCID, 4, "Máx HP",.@lc$;
	callfunc "newMes", .@NPCID, 5, "Máx SP",.@lc$;
	callfunc "newMes", .@NPCID, 6, "Nivel",.@lc$;
	callfunc "newMes", .@NPCID, 7, "Nivel de Job",.@lc$;
}

function	script	BK_lie2me	{
	set .@NPCID, callfunc("getNPCID","BKlie2me");
	
	set .@Lie, rand(2);
	set .@Dif, rand(5)?rand(1,10):-1;
	set .@p, rand(4);
	setarray .@ans1$[0],callfunc("rndName",rand(5,6)),callfunc("rndName",rand(5,6)),callfunc("rndName",rand(5,6)),callfunc("rndName",rand(5,6));
	setarray .@ans2$[0],callfunc("getMes",.@NPCID,4),callfunc("getMes",.@NPCID,5),callfunc("getMes",.@NPCID,6),callfunc("getMes",.@NPCID,7);
	
	if (.@Lie) {
		// Fill the arrays with real information
		setarray .@ans3[0],MaxHP,MaxSP,BaseLevel,JobLevel;
		setarray .@ans4[0],0,0,0,0;
		set .@ans4[.@p],1;
		set .@ans3[.@p],.@ans3[.@p] + .@Dif;
	} else {
		// Fill the arrays with false information
		setarray .@ans3[0],MaxHP + .@Dif,MaxSP + .@Dif,BaseLevel + .@Dif,JobLevel + .@Dif;
		setarray .@ans4[0],1,1,1,1;
		set .@ans4[.@p],0;
		switch(.@p) {
			case 0: set .@ans3[.@p],MaxHP; break;
			case 1: set .@ans3[.@p],MaxSP; break;
			case 2: set .@ans3[.@p],BaseLevel; break;
			case 3: set .@ans3[.@p],JobLevel; break;
		}
		
	}
	
	// Construct the menu in the original order
	set .@menu$, "";
	for (set .@x,0; .@x < 4; set .@x, .@x + 1) {
		set .@menu$, .@menu$ + "^0000ff" + .@ans1$[.@x] + "^000000:";
	}

	// Change the order in the arrays to make it difficult for the botters (only visual order, excluded .@ans4 to remember the right answer)
	query_sql "select 1 union select 2 union select 3 union select 4 order by rand()",.@order;
	for (set .@x,0; .@x < 3; set .@x, .@x + 1) {
		for (set .@y,.@x+1; .@y < 4; set .@y, .@y + 1) {
			if (.@order[.@x] > .@order[.@y]) {
				set .@tmp$, .@ans1$[.@x]; set .@ans1$[.@x], .@ans1$[.@y]; set .@ans1$[.@y], .@tmp$;
				set .@tmp$, .@ans2$[.@x]; set .@ans2$[.@x], .@ans2$[.@y]; set .@ans2$[.@y], .@tmp$;
				set .@tmp2, .@ans3[.@x];  set .@ans3[.@x],  .@ans3[.@y];  set .@ans3[.@y],  .@tmp2;
			}
		}
	}

	// Show the question
	mes "[^ff0000" + @BKPoliceName$ + "^000000]";
	mes ">>> ^ff0000" + callfunc("getMes",.@NPCID,.@Lie?0:2) + " ^000000<<<";
	mes " ";
	for (set .@x,0; .@x < 4; set .@x, .@x + 1) {
		mes (.@x + 1) + ") ^ff0000" + .@ans1$[.@x] + ": '^173b65" + callfunc("getMes",.@NPCID,1) + " " + .@ans2$[.@x] + " " + callfunc("getMes",.@NPCID,3) + " ^0000ff" + .@ans3[.@x] + "^000000'";
	}
	next;
	
	// Ask to the player
	set .@opc, prompt(.@menu$) - 1;
	if (.@opc > 3) return false;
	
	// Return 1 when the player discover the lying guy or 0 if not
	return .@ans4[.@opc] && .@Lie?1:!.@ans4[.@opc] && !.@Lie?1:0;
}

function	script	rndName	{
	setarray .@v$[0],"a","e","i","o","u";
	setarray .@c$[0],"b","c","d","f","g","j","k","l","m","n","p","r","s","t","v","z";
	setarray .@f$[0],"l","n","r","s","sh","ch","rk","st","ck","nt";
	set .@l, getarg(0);
	set .@s, rand(2);
	for (; .@x < .@l; set .@x, .@x + 1) {
		if (set(.@s, .@s + 1) > 1 || !.@s) {
			set .@s, 0;
			set .@name$, .@name$ + .@c$[rand(getarraysize(.@c$))];
		} else {
			set .@name$, .@name$ + .@v$[rand(getarraysize(.@v$))];
		}
	}
	if (!.@s) set .@name$, .@name$ + .@f$[rand(getarraysize(.@f$))];
	return .@name$;
}