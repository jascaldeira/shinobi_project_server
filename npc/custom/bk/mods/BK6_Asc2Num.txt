// --/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/ //
//              ______       _   _   ___ _ _              ____                 //
//              | ___ \     | | | | / (_) | |            / ___|                //
//              | |_/ / ___ | |_| |/ / _| | | ___ _ __  / /___                 //
//              | ___ \/ _ \| __|    \| | | |/ _ \ '__| | ___ \                //
//              | |_/ / (_) | |_| |\  \ | | |  __/ |    | \_/ |                //
//              \____/ \___/ \__\_| \_/_|_|_|\___|_|    \_____/                //
//                                      _       _                              //
//                      /\/\   ___   __| |_   _| | ___                         //
//                     /    \ / _ \ / _` | | | | |/ _ \                        //
//                    / /\/\ \ (_) | (_| | |_| | |  __/                        //
//                    \/    \/\___/ \__,_|\__,_|_|\___|                        //
//                                                                             //
// --/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/ //
//                                                                             //
//  Release Date: 03-09-2010      Version: 1.00      Author: Myzter            //
//                                                                             //
// --/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/--/ //
//                                                                             //
//  Module Name: ASCII Number  //

-	script	asc2num_init	-1,{
OnInit:
	while (!$@BotKillerEnabled) sleep 100;
	callfunc "addModule","asc2num","ASCII Number","1.00",100;
	set .@NPCID, callfunc("getNPCID","BKasc2num");
	
	// English Messages
	set .@lc$,"en";
	callfunc "newMes", .@NPCID, 0, "You'll see a number drawn with letters, input it when prompted.",.@lc$;

	// Spanish Messages
	set .@lc$,"es";
	callfunc "newMes", .@NPCID, 0, "A continuación verás un número dibujado con letras, ingrésalo cuando te lo pida.",.@lc$;
}

function	script	BK_asc2num	{
	set .@NPCID, callfunc("getNPCID","BKasc2num","BKasc2num");
	set .@mnum, rand(1,999);
	mes "[^ff0000" + @BKPoliceName$ + "^000000]";
	mes callfunc("getMes",.@NPCID,0);
	next;
	callfunc "BK_tnm",.@mnum,0,rand(2);
	mes " ";
	mes callfunc("getMes",$@BKNPCID,67) + (atoi(callfunc("ReadC","BKTry")) + 1) + callfunc("getMes",$@BKNPCID,68) + $@BKMaxTry + " *";
	next;
	input .@Result;
	if (.@Result != .@mnum) return 0;
	return 1;
}

function	script	BK_tnm	{
	set .@mnum, getarg(0);
	set .@cdig, getarg(1);
	set .@D1, .@mnum / 100;
	set .@D2, (.@mnum - (.@D1 * 100)) / 10;
	set .@D3, .@mnum - (.@D1 * 100) - (.@D2 * 10);
	setarray .@BK_ASCIIChars$[0],"*","x","¢","©","®","ø"; // Characters to draw ASCII Numbers
	switch (.@cdig) {
		case 0:
			set @L00$, "";
			set @L01$, "";
			set @L02$, "";
			set @L03$, "";
			set @L04$, "";
			set @L05$, "";
			set @L06$, "";
			set @cnum, .@D1;
			break;
		case 1:
			set @cnum, .@D2;
			break;
		default:
			set @cnum, .@D3;
	}
	set .@curstr$,.@BK_ASCIIChars$[rand(getarraysize(.@BK_ASCIIChars$))];
	if (getarg(2)) set .@lngnum,rand(1,2); else set .@lngnum,2;
	set .@vertnum, rand(3);
	switch(@cnum) {
		case 0: setarray .@wnum[0],15,9,9,9,15,6,9,9,9,6,6,13,9,11,6;		break;
		case 1: setarray .@wnum[0],6,5,4,4,15,6,4,4,4,15,4,4,4,15;		break;
		case 2: setarray .@wnum[0],15,8,15,1,15,7,8,14,1,15,6,9,4,2,15;		break;
		case 3: setarray .@wnum[0],15,8,15,8,15,6,9,12,9,6,7,8,6,8,7;		break;
		case 4: setarray .@wnum[0],9,9,15,8,8,8,12,10,15,8,12,10,9,15,8;	break;
		case 5: setarray .@wnum[0],15,1,15,8,15,14,1,7,8,7,15,1,14,8,15;	break;
		case 6: setarray .@wnum[0],15,1,15,9,15,4,2,15,9,6,6,1,15,9,6;		break;
		case 7: setarray .@wnum[0],15,8,4,2,1,15,8,8,8,8,15,8,14,4,2;		break;
		case 8: setarray .@wnum[0],15,9,15,9,15,6,9,6,9,6,15,9,6,9,15;		break;
		default:setarray .@wnum[0],15,9,15,8,15,15,9,14,4,3,6,9,14,4,2;
	}
	set .@spaces$,callfunc("RndColor2") + callfunc("RepeatString",.@curstr$,rand(1,2));
	set .@tmn, rand(getarraysize(.@wnum) / 5) * 5;
	for (set .@mn, 0; .@mn < 5; set .@mn, .@mn + 1) {
		set .@msgline$,.@spaces$;
		set .@separator$, callfunc("RepeatString",.@curstr$,rand(1,3));
		if (.@wnum[(.@tmn + .@mn)]&1) set .@msgline$,.@msgline$ + callfunc("RndColor") + callfunc("RepeatString",.@curstr$,.@lngnum); else set .@msgline$,.@msgline$ + callfunc("RndColor2") + callfunc("RepeatString",.@curstr$,.@lngnum);
		if (.@wnum[(.@tmn + .@mn)]&2) set .@msgline$,.@msgline$ + callfunc("RndColor") + callfunc("RepeatString",.@curstr$,.@lngnum); else set .@msgline$,.@msgline$ + callfunc("RndColor2") + callfunc("RepeatString",.@curstr$,.@lngnum);
		if (.@wnum[(.@tmn + .@mn)]&4) set .@msgline$,.@msgline$ + callfunc("RndColor") + callfunc("RepeatString",.@curstr$,.@lngnum); else set .@msgline$,.@msgline$ + callfunc("RndColor2") + callfunc("RepeatString",.@curstr$,.@lngnum);
		if (.@wnum[(.@tmn + .@mn)]&8) set .@msgline$,.@msgline$ + callfunc("RndColor") + callfunc("RepeatString",.@curstr$,.@lngnum); else set .@msgline$,.@msgline$ + callfunc("RndColor2") + callfunc("RepeatString",.@curstr$,.@lngnum);
		set .@CurVar$, "@L0" + (.@vertnum + .@mn) + "$";
		setd .@CurVar$,getd(.@CurVar$) + .@msgline$;
	}
	for (set .@mn2, 0; .@mn2 < 7; set .@mn2, .@mn2 + 1) {
		if (.@mn2 < .@vertnum || .@mn2 > .@vertnum + 4) {
			set .@CurVar$, "@L0" + .@mn2 + "$";
			setd .@CurVar$,getd(.@CurVar$) + callfunc("RndColor2") + .@spaces$ + callfunc("RepeatString",.@curstr$,(4 * .@lngnum));
		}
	}
	if (.@cdig < 2) {
		callfunc "BK_tnm",.@mnum,.@cdig + 1,getarg(2);
	} else {
		mes @L00$;
		mes @L01$;
		mes @L02$;
		mes @L03$;
		mes @L04$;
		mes @L05$;
		mes @L06$ + "^000000";
	}
	return;
}
