//===== eAthena Script =======================================
//= Guest Quiz
//===== By: ==================================================
//= Kichi
//= This is Paid Service, you can't share this content
//= Contact http://rathena.org/board/user/424-kichi/
//===== Current Version: =====================================
//= Version 1.0
//===== Description: ========================================= 
//= Guest the Mob / Item name depending NPC clue.
//============================================================
prt_fild08,172,370,5	script	Travia#a	909,{
//enablecommand;
function read;
 if(getgmlevel()<1)goto L_Player;
 else goto L_GM;
end;
OnWhisperGlobal:
OnInit:
	// ===============  Setting   ============== //
	set .Reward,607;						//Reward from NPC
	set .Amount,1;							//Amount of reward.
	set .QuizMaterial,3;					//Quiz Meterial 1 = Item Only, 2=Mob Only, 4= Etc Only. 7 = Item,Mob,Etc
	set .MaximumMMaterial,2;				//Maximum Mob material, see Mob / Item Setting.
	set .MaximumIMaterial,2;				//Maximum Item material, see Mob / Item Setting.
	set .MaximumEMaterial,2;				//Maximum Item material, see Mob / Item Setting.
	set .MaxRound,10;						//Maximum Rounds
	//================ End Setting ================//
	getmapxy .map$,.x,.y,1;
end;

L_Player:	
	mes "Vai começar mais um evento: Quiz NRO!";
	mes "Para jogar, basta ir até o npc e responder no chat qual é a resposta da pergunta.";
	next;
	mes "Nós daremos uma dica a cada 30 segundos.";
	mes "Se ninguém acertar durante 90 segundos, a rodada será encerrada.";
	mes "Boa sorte";
	close;
L_GM:
	mes "Welcome GM.";
	mes "Wanna start the event?";
	switch (select("Stop","Start")){
		case 1:
			mes "Event will end";
			set .Start,0;
			close;
		case 2:
			mes "Event will start shorly";
			set .Start,1;
			donpcevent strnpcinfo(0)+"::OnIntro";
			close;
	}
	end;
OnClock1900:
	if (.Start==1)end;
	set .Start,1;
OnIntro:
	set .round,0;
	mapannounce .map$,"Vai começar mais um evento: Quiz NRO!",bc_map;
	npctalk "Vai começar mais um evento: Quiz NRO!";
	sleep 1500;
	mapannounce .map$,"Para jogar, basta ir até o npc e responder no chat qual é a resposta da pergunta.",bc_map;
	npctalk "Para jogar, basta ir até o npc e responder no chat qual é a resposta da pergunta.";
	sleep 1500;
	mapannounce .map$,"Nós daremos uma dica a cada 30 segundos.",bc_map;
	npctalk "Nós daremos uma dica a cada 30 segundos.";
	sleep 1500;
	mapannounce .map$,"Se ninguém acertar durante 90 segundos, a rodada será encerrada.",bc_map;
	npctalk "Se ninguém acertar durante 90 segundos, a rodada será encerrada.";
	sleep 1500;
	mapannounce .map$,"Boa sorte!",bc_map;
	npctalk "Boa sorte!";
	sleep 1500;
OnStart:
	if((!.Start)||(.round>=.MaxRound)){
		mapannounce .map$,"O Quiz NRO está encerrado.",bc_map;
		end;
	}	
	set .round,.round+1;
	mapannounce .map$,"A rodada: "+.round+" irá iniciar em 3 segundos",bc_map;
	npctalk "A rodada: "+.round+" irá iniciar em 3 segundos";
	sleep 3000;
	//================= Mob / Item Setting =============== //
	//<Identify>,Answer Id>,<Clue 1>,<Clue 2>,<Clue 3>,...
	//read("Poporing","1031","Jumping Green Monster","*Boink* *boink*","Payon Forest");
	if (.QuizMaterial==1)set .@j,1;
	if (.QuizMaterial==2)set .@j,2;
	if (.QuizMaterial==4)set .@j,3;
	if (.QuizMaterial==3)set .@j,rand(1,2);
	if (.QuizMaterial==5){set .@l,rand(0,1);if(.@l)set .@j,1; else set .@j,3;}
	if (.QuizMaterial==7)set .@j,rand(1,3);
	switch (.@j){
		case 1:
			set .@k,rand(1,.MaximumIMaterial);
			switch (.@k){
				case 1:	//Jellopy
					read(1,909,"have Blue color","A small crystallization?","Most drop by jelly monster");
					break;	
				case 2:	//Yggdrasil Berry
					read(1,607,"yellow color is dominant","A fruit","Most drop by MVP");
					break;
			}	
		break;
		
		
		case 2:
			set .@k,rand(1,.MaximumMMaterial);
			switch (.@k){
				case 1:	//Poring
					read(2,1002,"Jumping Pink Monster","*Boink* *boink*","Payon Forest");
					break;
				case 2:	//Poporing
					read(2,1031,"Jumping Green Monster","*Boink* *boink*","Payon Forest");
					break;
			}
		case 3:
			set .@k,rand(1,.MaximumEMaterial);
			switch (.@k){
				case 1:	//Custom Guest
					read(3,"kakashi","branco","*Boink* *boink*","Payon Forest");
					break;
				case 2:	//Poporing
					read(3,"naruto","amarelo","*Bosadasnk*","Payon Forest");
					break;
			}
		break;
		default:
			read(2,1002,"Jumping Pink Monster","*Boink* *boink*","Payon Forest");
		break;
	}
	//================= End Mob / Item Setting =============== //
	set .@l,atoi(.question$[0]);
	switch (.@l	){
			case 1:
				set .AnswerName$, getitemname(atoi(.question$[1]));
				break;
			case 2:
				set .AnswerName$, strmobinfo(1,atoi(.question$[1]));
				break;
			case 3:
				set .AnswerName$,.question$[1];
				break;
			default:
				set .AnswerName$, strmobinfo(1,atoi(.question$[1]));
				break;
	}
	defpattern 1, "([^:]+):."+.AnswerName$+".*", "winround";
	activatepset 1;
	mapannounce .map$,"Rodada "+.round+" iniciou!",bc_map;
	npctalk "Rodada "+.round+" iniciou!";
	sleep 2000;
	if (atoi(.question$[0])!=3){
	mapannounce .map$,"Esta pergunta é da categoria: "+((atoi(.question$[0])==1)?"[Item]":"[Monstro]"),bc_map;
	npctalk "Esta pergunta é da categoria: "+((atoi(.question$[0])==1)?"[Item]":"[Monstro]");
	}else{
	mapannounce .map$,"Esta pergunta é da categoria: [Diversos]",bc_map;
	npctalk "Esta pergunta é da categoria: [Diversos]";
	}
	initnpctimer;
	end;
	
OnTimer1000:
	mapannounce .map$,"Primeira dica: "+.question$[2]+"",bc_map;
	npctalk "Primeira dica: "+.question$[2]+"";
	end;
	
OnTimer30000:
	mapannounce .map$,"Segunda dica: "+.question$[3]+"",bc_map;
	npctalk "Segunda dica: "+.question$[3]+"";
	end;
	
OnTimer60000:
	mapannounce .map$,"Terceira dica: "+.question$[4]+"",bc_map;
	npctalk "Terceira dica: "+.question$[4]+"";
	end;
	
OnTimer80000:
	mapannounce .map$,"Restam apenas 10 segundos. Aqui estão as dicas novamente: "+.question$[2]+","+.question$[3]+"",bc_map;
	npctalk "Restam apenas 10 segundos. Aqui estão as dicas novamente: "+.question$[2]+","+.question$[3]+"";
	end;
	
OnTimer90000:
	mapannounce .map$,"Tempo esgotado",bc_map;
	npctalk "Tempo esgotado";
	end;
	
OnTimer91000:
	mapannounce .map$,"The Answer is "+.AnswerName$+"",bc_map;
	npctalk "The Answer is "+.AnswerName$+"";
	stopnpctimer;
	donpcevent strnpcinfo(0)+"::OnStart";
	end;
	

function read {
		for(set .@i,0;.@i <=4;set .@i,.@i+1){
			set .@temp$,getarg(.@i);
			if(.@temp$!=""){
				/*if(.@i==0){
					if((.@temp$=="Item")||(.@temp$=="item"))setarray .question$[.@i],"1";
					else if((.@temp$=="Mob")||(.@temp$=="mob")) setarray .question$[.@i],"2";
					else {debugmes "Travia Game #"+getarg(0)+","+getarg(1)+" invalid identifier (skipped)."; return; }
				}*/
				setarray .question$[.@i],.@temp$;
			}
			else setarray .question$[.@i],"";
		}
	return;
	}
	winround:
	set .winner,1;
	deactivatepset 1;
	deletepset 1;
	announce "[Quiz NRO] O jogador "+strcharinfo(0)+" respondeu corretamente.",bc_map;
	npctalk "[Quiz NRO] O jogador "+strcharinfo(0)+" respondeu corretamente.";
	getitem .Reward,.Amount;
	stopnpctimer;
	sleep 2000;
	donpcevent strnpcinfo(0)+"::OnStart";
    end;
}